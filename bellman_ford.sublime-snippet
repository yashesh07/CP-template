<snippet>
    <content><![CDATA[
bool bellman_ford(ll source, ll n, vector<ll>& dist, vector<ll>& predecessor, vector<vector<pair<ll, ll>>>& adj){
   dist.assign(n, linf);
   predecessor.assign(n, -1);
   dist[source] = 0;
   vector<pair<pair<ll, ll>, ll>> edges;
   for(ll i = 0; i<n; i++){
      for(auto &v : adj[i]){
         edges.push_back({{i, v.first}, v.second});
      }
   }
   for(ll i = 0; i<n-1; i++){
      for(auto &edge : edges){
         ll u = edge.first.first;
         ll v = edge.first.second;
         ll w = edge.second;
         if(dist[u]+w<dist[v]){
            dist[v] = dist[u]+w;
            predecessor[v] = u;
         }
      }
   }
   for(auto &edge : edges){
      ll u = edge.first.first;
      ll v = edge.first.second;
      ll w = edge.second;
      if(dist[u]+w<dist[v])   return false;
   }
   return true;
}
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>bellman_ford</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.c++</scope>
</snippet>
